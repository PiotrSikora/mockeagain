Description
===========

This tool emulates an ideally slow network by mocking the
polling and read/write syscalls exposed by glibc via the
LD_PRELOAD technique.

By preloading this dynamic library to your network server
process, it will intercept the "poll", "close", "send", and "writev"
syscalls, only allow the writing syscalls to actually write a single byte
at a time (without flushing), and returns EAGAIN until another
"poll" called on the current socket fd.

The socket fd must be called first by a "poll" call to mark
itself to this tool as an "active fd" and trigger subsequence
the writing syscalls to behave differently.

With this tool, one can emulate extreme network conditions
even locally (with the loopback device).

Build
=====

Just issue the following command to build the file mockeagain.so

    make

The gcc compiler is required.

Usage
=====

For now, only "poll" syscall and slow writing mocking are supported.

Here we take Nginx as an example:

1. Ensure that you have passed the --with-poll_module option while
   invoking nginx's configure script to build nginx.

2. Ensure that you've enabled the "poll" event model in your nginx.conf:

    events {
        use poll;
        worker_connections 1024;
    }

3. Ensure that you've disabled nginx's own write buffer:

    postpone_output 1; # only postpone a single byte, default 1460 bytes

4. Run your Nginx this way:

    LD_PRELOAD=/path/to/mockeagain.so /path/to/nginx ...

TODO
====

* add support for write, sendto, and more writing syscalls.
* add support for other event interfaces like epoll, select, kqueue, and more.
* add support for slow read mocking, like the recvfrom syscall.

Author
======

Zhang "agentzh" Yichun (章亦春)

Copyright & License
===================

This module is licenced under the BSD license.

Copyright (C) 2011 by Zhang "agentzh" Yichun (章亦春) <agentzh@gmail.com>.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

    * Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

